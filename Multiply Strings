class Solution {
    public String multiply(String num1, String num2) {
        // Edge case: if either number is zero
        if (num1.equals("0") || num2.equals("0")) {
            return "0";
        }

        int m = num1.length();
        int n = num2.length();
        int[] result = new int[m + n];

        // Multiply each digit
        for (int i = 0; i < m; i++) {
            int a = num1.charAt(m - 1 - i) - '0';  // reverse indexing
            for (int j = 0; j < n; j++) {
                int b = num2.charAt(n - 1 - j) - '0';
                result[i + j] += a * b;
            }
        }

        // Handle carry
        int carry = 0;
        for (int k = 0; k < result.length; k++) {
            int sum = result[k] + carry;
            result[k] = sum % 10;
            carry = sum / 10;
        }

        // Build answer (skip leading zeros)
        StringBuilder sb = new StringBuilder();
        int idx = result.length - 1;
        while (idx > 0 && result[idx] == 0) {
            idx--;
        }
        while (idx >= 0) {
            sb.append(result[idx--]);
        }

        return sb.toString();
    }
}
